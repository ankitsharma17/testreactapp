{"version":3,"sources":["logo.svg","components/Item.js","components/List.js","components/Search.js","utils/axioscall.js","container/RefDemo.js","container/Shop.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Item","props","react_default","a","createElement","Fragment","id","name","src","url","defaultProps","List","items","map","itemObject","components_Item_Item","key","Search","type","onChange","takeInput","placeholder","axios","defaults","baseURL","headers","get","myInterceptor","interceptors","request","use","console","log","localStorage","tokenNumber","tokenId","makeAxiosCall","create","timeout","maxContentLength","response","data","setTimeout","eject","RefDemo","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","msg","inherits","createClass","value","refs","object","result","concat","setState","ref","onClick","saveInfo","bind","Component","Shop","_React$Component","counter","interval","undefined","json","JSON","parse","arr","objectSpread","event","searchValue","target","_this2","promise","promise2","promise3","all","then","catch","err","_this3","RefDemo_RefDemo","toggleMessage","Search_Search","List_List","_this4","setInterval","nextProps","nextState","clearInterval","React","App","count","jsx","Shop_Shop","changeX","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c57b1d23.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n// export const Item = (props)=>{\n//     return (\n//         <>\n//         <p>{props.item.id} {props.item.name}</p>\n//         <img src={props.item.url}/>\n//         <button>Add to Cart</button>\n        \n//         <button>Remove from Cart</button>\n//         </>\n//     )\n// }\n\nexport const Item = (props)=>{\n    return (\n        <>\n        <p>{props.id} {props.name}</p>\n        <img src={props.url}/>\n        <button>Add to Cart</button>\n        \n        <button>Remove from Cart</button>\n        </>\n    )\n}\nItem.defaultProps = {\n    name:'Apple IPhone X'\n}\nItem.propTypes = {\n    id:PropTypes.number.isRequired,\n    url:PropTypes.string.isRequired\n}","import React from 'react';\nimport {Item} from './Item';\nexport const List = (props)=>{\n    return (\n        <div>\n            {props.items.map(itemObject=><Item key={itemObject.id} id={itemObject.id}  url={itemObject.url}/>)}\n        </div>\n    )\n}","import React from 'react';\nexport const Search = (props)=>{\n    return (\n        <>\n        <input type='text' onChange={props.takeInput} placeholder='Type to Search'/>\n        </>\n    )\n}","\r\nimport axios from 'axios';\r\n//axios.defaults.baseURL = 'http://localhost:1234';\r\naxios.defaults.baseURL='https://raw.githubusercontent.com/brainmentorspvtltd/myserverdata/master';\r\naxios.defaults.headers.get['Content-Type']='application/json';\r\nconst myInterceptor = axios.interceptors.request.use(request=>{\r\n    console.log('Request Interceptor Invoked ',localStorage.tokenNumber);\r\n    //request.tokenId = 'A123456';\r\n\r\n    request.tokenId = localStorage.tokenNumber;\r\n    return request;\r\n});\r\n\r\naxios.interceptors.response.use(response=>{\r\n    console.log('Response Interceptor Invoked ',response);\r\n    response.data['mobiles'][0].id = 999999;\r\n    return response;\r\n});\r\nsetTimeout(()=>{\r\naxios.interceptors.request.eject(myInterceptor);\r\n},9000);\r\nexport function makeAxiosCall(url){\r\n    const options = {\r\n        //method:'GET',\r\n        //url:url,\r\n        //timeout:3000,\r\n        maxContentLength:4000\r\n        // data:{\r\n        //     firstName:'Brain',\r\n        //     lastName:'Mentors'\r\n        // }\r\n    };\r\n    console.log('*********************Axios is  Type ',typeof axios);\r\n//var promise = axios(options);\r\nvar axiosMyObject = axios.create({baseURL:'https://raw.githubusercontent.com/brainmentorspvtltd/myserverdata/master'\r\n, timeout:4000});\r\nvar promise  = axiosMyObject.get(url,options);\r\n//var promise = axios.get(url,options);  // axios.post()\r\nreturn promise;\r\n}","import React,{ Component } from \"react\";\r\n\r\nexport class RefDemo extends Component{\r\n  \r\n    constructor(){\r\n        super();\r\n        this.state = {msg:''};\r\n\r\n    }\r\n    // this will take input of all textboxes\r\n    saveInfo(){\r\n            console.log('Ref is ',this.refs, 'Type of ',typeof this.refs);\r\n            var object = {};\r\n            for(let key in this.refs){\r\n                object[key] = this.refs[key].value;\r\n            }\r\n            console.log('Object ',object);\r\n            var result = '';\r\n            for(let key in object){\r\n                result += `${key} ${object[key]}`;\r\n            }\r\n            this.setState({msg:result});\r\n\r\n            // var name = this.refs.name.value;\r\n            // var salary = this.refs.salary.value;\r\n            // var city = this.refs.city.value;\r\n            // var phone = this.refs.phone.value;\r\n            // var result = `Name is ${name} Salary is ${salary} City is ${city} and Phone is ${phone}`;\r\n            // this.setState({msg:result});\r\n\r\n    }\r\n  render(){\r\n    return (\r\n        // We create 4 text boxes and assign 4 refs\r\n        <div>\r\n            <h1>Register Form</h1>\r\n            <p>{this.state.msg}</p>    \r\n            <input type='text' ref=\"name\" placeholder=\"Type Your Name\"/>\r\n            <br/>\r\n            <input type='text' ref=\"salary\" placeholder=\"Type Your Salary\"/>\r\n            <br/>\r\n            <input type='text' ref=\"city\" placeholder=\"Type Your City\"/>\r\n            <br/>\r\n            <input type='text' ref=\"phone\" placeholder=\"Type Your Phone\"/>\r\n            <br/>\r\n            <button onClick={this.saveInfo.bind(this)}>Register</button>\r\n        </div>\r\n    )\r\n  }  \r\n}","import React from 'react';\nimport {itemOperations} from '../models/itemoperations';\nimport {List} from '../components/List';\nimport {Search} from '../components/Search';\nimport {doAjax} from '../utils/Ajax';\nimport {makeAxiosCall} from '../utils/axioscall';\nimport axios from 'axios';\nimport {RefDemo} from './RefDemo';\nexport class Shop extends React.Component{\n    constructor(props){\n        super(props);\n        this.msg = false;\n        this.counter = 1;\n        this.interval = undefined;\n        this.state = {items:[], msg:this.msg};\n        console.log(\"Constructor call\");\n    }\n    jsonResult(json){\n        console.log(\"JSON Rec in Shop componet\",typeof json);\n        var object=JSON.parse(json);\n        console.log(\"data is parsed\");\n        console.log(\"object is\",object,\"\" ,typeof object);\n        var arr=object['mobiles'];\n        this.setState({...this.state,items:arr});\n    }\n    takeInput(event){\n        this.searchValue=event.target.value;\n    }\n    // static getDerivedStateFromProps(props, state){\n    //     console.log('GetDerived State from Props call ',props, state);\n    //     // State Manipluation\n    //     return state;\n    // }\n    componentWillMount(){\n        console.log('************Component will Mount Call And Do Ajax Call');\n        //const url = \"https://raw.githubusercontent.com/brainmentorspvtltd/myserverdata/master/mobiles.json\";\n        //doAjax(url,this.jsonResult.bind(this));\n        const url=\"/mobiles.json\";\n        var promise = makeAxiosCall(url);\n        var promise2 = makeAxiosCall(url);\n        var promise3 = makeAxiosCall(url);\n        axios.all([promise,promise2,promise3]).then(arr=>{\n            console.log('All Promise Result is ',arr);\n        })\n        // console.log(\"After End \",promise);\n        promise.then(response=>{\n            console.log('Axios Result is ',response.data['mobiles']);\n            var arr = response.data['mobiles'];\n            //delete localStorage.tokenId;\n         this.setState({...this.state,items:arr});\n        }).catch(err=>{\n            console.log('Error is ',err);\n        })\n// var promise = fetch(url); // Async \n// console.log(\"After End \",promise);\n// promise.then(response=>{\n// console.log(\"Response is \",response);\n// response.json().then(data=>{\n//     console.log(\"Data is \",data);\n//     var arr=data['mobiles'];\n//     this.setState({...this.state,items:arr});\n// }).catch(e=>console.log(\"JSON Parse Error \",e));\n// }).catch(err=>{\n// console.log(\"Error in Response \",err);\n// });\n        // let itemArray = itemOperations.fill();\n        // this.setState({...this.state,items:itemArray});\n    }\n    toggleMessage(){\n        this.msg = !this.msg;\n        this.setState({...this.state,msg:this.msg});\n    }\n    render(){\n        console.log(\"Render call\");\n        return (\n\n            <div>\n                <RefDemo/>\n                {this.state.msg?<p>Shopping</p>:<h1>Shop Here</h1>}\n                <button onClick={()=>{\n                    this.toggleMessage();\n                }}>Toggle</button>\n                <Search takeInput={this.takeInput.bind(this)}/>\n                <List items = {this.state.items}/>\n\n            </div>\n        )\n    }\n    componentDidMount(){\n        this. interval = setInterval(()=>{\n                // console.log('Set Interval Call ',this.counter);\n                this.counter++;\n        },4000);\n        console.log('Did Mount Call');\n    }\n    componentShouldUpdate(nextProps, nextState){\n        if(this.state.counter == nextState.counter){\n            return false;\n        }\n        return true;\n    }\n    componentWillUnmount(){\n        console.log('UnMount Call');\n        clearInterval(this.interval);\n    }\n}","// import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n// import {Shop} from './container/Shop';\n\n// function App() {\n//   return (\n//     <Shop/>\n//   );\n// }\n\n// export default App;\n\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Shop } from './container/Shop';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.count = 100;\n    this.state = {counter:this.count};\n  }\n  changeX(){\n        this.count++;\n        this.setState ({counter:this.count});\n  }\n  render(){\n  \n  var jsx = this.state.counter==100?<Shop/>:<h1>No Shop Loaded</h1>\n  return (\n    <div>\n    <button onClick={this.changeX.bind(this)}>COUNTDOWN</button>\n    {jsx}\n    </div>\n  );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}